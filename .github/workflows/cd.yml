name: CI/CD using github actions & docker

on:
  push:
    branches:
      - "release"
      - "release/**"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      # application.yml 파일 생성
      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          echo '${{ secrets.APPLICATION_YML }}' > src/main/resources/application.yml

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # Docker build & Push (커밋 해시 사용)
      - name: Docker build & push to Docker hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          # 짧은 커밋 해시 (7자리) 사용
          COMMIT_HASH=$(echo ${{ github.sha }} | cut -c1-7)
          docker build -t ${{ secrets.DOCKER_USERNAME }}/igemoney-be:$COMMIT_HASH -t ${{ secrets.DOCKER_USERNAME }}/igemoney-be:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/igemoney-be:$COMMIT_HASH
          docker push ${{ secrets.DOCKER_USERNAME }}/igemoney-be:latest

      # EC2 배포
      - name: Docker image pull & Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }} # EC2 인스턴스 퍼블릭 DNS
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }} # pem 키
          # 도커 작업
          script: |
            # 커밋 해시 설정
            COMMIT_HASH=$(echo ${{ github.sha }} | cut -c1-7)
            
            # 1. 특정 버전의 이미지 받기 (커밋 해시 사용)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/igemoney-be:$COMMIT_HASH

            # 2. 기존에 실행 중인 컨테이너가 있다면 중지하고 삭제
            if [ $(sudo docker ps -a -q -f name=igemoney-be) ]; then
              sudo docker stop igemoney-be
              sudo docker rm igemoney-be
            fi

            # 3. 새 컨테이너를 실행 (커밋 해시 버전으로)
            sudo docker run -d --name igemoney-be -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/igemoney-be:$COMMIT_HASH

            # 4. 사용하지 않는 이미지 정리
            sudo docker image prune -a -f
            
            # 5. 현재 시점의 application yml 문서 생성 (커밋 해시 포함)
            TIMESTAMP=$(date +%Y%m%d_%H%M%S)
            CONFIG_DIR=~/application-ymls/${TIMESTAMP}_${COMMIT_HASH}
            mkdir -p $CONFIG_DIR
            echo "${{ secrets.APPLICATION_YML }}" > $CONFIG_DIR/application.yml
            echo "Deployed version: $COMMIT_HASH" > $CONFIG_DIR/version.txt
